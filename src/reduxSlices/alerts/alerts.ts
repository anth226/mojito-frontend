import { createSlice } from '@reduxjs/toolkit';
import { RootState } from 'app/store';

interface alertStateInterface {
  alert: any | null;
}

const initialState: alertStateInterface = {
  alert: null,
};

export const alertSlice = createSlice({
  name: 'alert',
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    setAlertInStore: (state, payloadWithType) => {
      state.alert = payloadWithType.payload;
    },
    removeAlertInStore: (state, payloadWithType) => {},
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
});

export const { setAlertInStore, removeAlertInStore } = alertSlice.actions;

// The function below is called a selector and allows us to select a value from
// the state. Selectors can also be defined inline where they're used instead of
// in the slice file. For example: `useSelector((state: RootState) => state.onboarding.value)`
export const getAlertFromStore = (state: RootState) => state.alert;

export default alertSlice.reducer;
