import { createSlice } from '@reduxjs/toolkit';
import { RootState } from 'app/store';

interface Source {
  connectionId: string;
  source: string;
}

export interface ClientStore {
  _id?: string;
  name: string;
  email: string;
  availableAccounts?: string[];
  source: Source[];
}

interface ClientStateInterface {
  client: ClientStore[];
}

const initialState: ClientStateInterface = {
  client: [],
};

export const clientSlice = createSlice({
  name: 'client',
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    setClientInStore: (state, payloadWithType) => {
      state.client = payloadWithType.payload;
    },
    updateClientInStore: (state, payloadWithType) => {
      const index = state.client.findIndex(
        (client: ClientStore) => client._id === payloadWithType.payload._id
      );

      if (
        index !== -1 &&
        index !== undefined &&
        state.client[index].source?.some(
          (source: Source) =>
            source.source === payloadWithType.payload.source.source
        )
      ) {
        const sourceIndex = state.client[index].source?.findIndex(
          (source) => source.source === payloadWithType.payload.source.source
        );

        sourceIndex !== -1 &&
          sourceIndex !== undefined &&
          state.client[index].source?.splice(sourceIndex, 1);
      } else {
        state.client[index].source = [
          ...state.client[index].source,
          payloadWithType.payload.source,
        ];
      }
    },
    removeClientInStore: (state) => {
      state.client = [];
    },
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
});

export const { setClientInStore, updateClientInStore, removeClientInStore } =
  clientSlice.actions;

// The function below is called a selector and allows us to select a value from
// the state. Selectors can also be defined inline where they're used instead of
// in the slice file. For example: `useSelector((state: RootState) => state.onboarding.value)`
export const getClientFromStore = (state: RootState) => state.client;

export default clientSlice.reducer;
